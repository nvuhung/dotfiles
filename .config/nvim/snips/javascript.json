{
  "JS React Component With PropTypes": {
    "prefix": "crcp",
    "body": "import React from 'react';\n\nconst ${1:${TM_FILENAME_BASE}} = ({}) => {\n\treturn (\n\t\t<>\n\t\t\t\n\t\t</>\n\t);\n};\n\n${1:${TM_FILENAME_BASE}}.propTypes = {\n\t$0\n};\n\nexport default ${1:${TM_FILENAME_BASE}};",
    "description": "Create React Component PropTypes"
  },
  "React Component Without PropTypes": {
    "prefix": "crc",
    "body": "import React from 'react';\n\nconst ${1:${TM_FILENAME_BASE}} = ({}) => {\n\treturn (\n\t\t<>\n\t\t\t\n\t\t</>\n\t);\n};\n\nexport default ${1:${TM_FILENAME_BASE}};",
    "description": "Create React Component"
  },
  "React Typescript Function Component": {
    "prefix": "crf",
    "body": "import React from 'react';\n\nconst ${1:${TM_FILENAME_BASE}}: React.FC = ({}) => {\n\treturn (\n\t\t<>\n\t\t\t\n\t\t</>\n\t);\n};\n\nexport default ${1:${TM_FILENAME_BASE}};",
    "description": "Create React Function Component Typescript"
  },
  "React Native": {
    "prefix": "crn",
    "body": "import React from 'react';\nimport { View, StyleSheet } from 'react-native';\n\nconst ${1:${TM_FILENAME_BASE}} = ({}) => {\n\treturn (\n\t\t<View>\n\t\t\t\n\t\t</View>\n\t);\n};\n\nconst styles = StyleSheet.create({});\n\nexport default ${1:${TM_FILENAME_BASE}};",
    "description": "Create React Native Component"
  },
  "reactMemo": {
    "prefix": "crm",
    "body": "import React, { memo } from 'react';\n\nconst ${1:${TM_FILENAME_BASE}} = () => {\n\treturn (\n\t\t<>\n\t\t\t$0\n\t\t</>\n\t);\n};\n\nexport default memo(${1:${TM_FILENAME_BASE}});",
    "description": "Creates a memoized stateless React component without PropTypes and ES6 module system"
  },
  "propTypes": {
    "prefix": "itypes",
    "body": "import PropTypes from 'prop-types';",
    "description": "Import PropType"
  },
  "defaultProps": {
    "prefix": "rdp",
    "body": "${1:$TM_FILENAME_BASE}.defaultProps = {\n\t$2\n};",
    "description": "Creates empty defaultProps declaration"
  },
  "reactTypes": {
    "prefix": "rtypes",
    "body": "${1:$TM_FILENAME_BASE}.propTypes = {\n\t$2\n};",
    "description": "Creates empty defaultProps declaration"
  },
  "styledComponents": {
    "prefix": "rstyled",
    "body": "const ${1:component} = styled.${2:element}`\n\t${3:style}\n`;",
    "description": "Adds use ref"
  },
  "useEffect": {
    "prefix": "rue",
    "body": "useEffect(() => {\n$0\n}, [$1])",
    "description": "Adds use effect"
  },
  "useEffectUnMount": {
    "prefix": "rueu",
    "body": "useEffect(() => {\n$0 return () => {\n$0\n\t}\n}, [$1])",
    "description": "Adds use effect"
  },
  "useState": {
    "prefix": "rus",
    "body": "const [$1, set${1/(.*)/${1:/capitalize}/}] = useState($2);",
    "description": "Adds use state"
  },
  "useRef": {
    "prefix": "rur",
    "body": "const ${1:ref} = useRef($2);",
    "description": "Adds use ref"
  },
  "useMemo": {
    "prefix": "rum",
    "body": "const $1 = useMemo(() => {}, [$0]);",
    "description": "Adds use memo"
  },
  "useCallback": {
    "prefix": "ruc",
    "body": "const $1 = useCallback(() => {}, [$0]);",
    "description": "Adds use callback"
  },
  "const": {
    "prefix": "cons",
    "body": "const ${1:label}",
    "description": "const"
  },
  "iifeFunction": {
    "prefix": "iife",
    "body": "((${1:params}) => {\n\t${2}\n})()",
    "description": "IIFE Function"
  },
  "namedFunction": {
    "prefix": "cf",
    "body": "const ${1:name} = (${2:params}) => {\n\t${3}\n}",
    "description": "Creates a named function in ES6 syntax"
  },
  "destructingObject": {
    "prefix": "do",
    "body": "const {${2:propertyName}} = ${1:objectToDestruct};",
    "description": "Creates and assigns a local variable using object destructing"
  },
  "destructingArray": {
    "prefix": "da",
    "body": "const [${2:propertyName}] = ${1:arrayToDestruct};",
    "description": "Creates and assigns a local variable using array destructing"
  },
  "promise": {
    "prefix": "promise",
    "body": "return new Promise((resolve, reject) => {\n\t${1}\n});",
    "description": "Creates and returns a new Promise in the standard ES6 syntax"
  },
  "promiseResolve": {
    "prefix": "presolve",
    "body": "return Promise.resolve(${1});",
    "description": "Return Promise.resolve"
  },
  "promiseReject": {
    "prefix": "preject",
    "body": "return Promise.reject(${1});",
    "description": "Return Promise.reject"
  },
  "consoleLog": {
    "prefix": "clg",
    "body": "console.log(${1:object});",
    "description": "Displays a message in the console"
  },
  "consoleLogObject": {
    "prefix": "clo",
    "body": "console.log('${1:object} :>> ', ${1:object});",
    "description": "Displays an object in the console with its name"
  },
  "setInterval": {
    "prefix": "interval",
    "body": "setInterval(() => {\n\t${2}\n}, ${0:intervalInms});",
    "description": "Executes the given function at specified intervals in ES6 syntax"
  },
  "setTimeOut": {
    "prefix": "timeout",
    "body": "setTimeout(() => {\n\t${2}\n}, ${1:delayInms});",
    "description": "Executes the given function after the specified delay in ES6 syntax"
  },
  "import": {
    "prefix": "imp",
    "body": "import ${2:moduleName} from '${1:module}';$0",
    "description": "Imports entire module statement in ES6 syntax"
  },
  "importNoModuleName": {
    "prefix": "imn",
    "body": "import '${1:module}';$0",
    "description": "Imports entire module in ES6 syntax without module name"
  },
  "importDestructing": {
    "prefix": "imd",
    "body": "import { $2 } from '${1:module}';$0",
    "description": "Imports only a portion of the module in ES6 syntax"
  },
  "importEverything": {
    "prefix": "ime",
    "body": "import * as ${2:alias} from '${1:module}';$0",
    "description": "Imports everything as alias from the module in ES6 syntax"
  },
  "importAs": {
    "prefix": "ima",
    "body": "import { ${2:originalName} as ${3:alias} } from '${1:module}';$0",
    "description": "Imports a specific portion of the module by assigning a local alias in ES6 syntax"
  },
  "require": {
    "prefix": "require",
    "body": "require('${1:package}');",
    "description": "Require a package"
  },
  "requireToConst": {
    "prefix": "crequire",
    "body": "const ${1:packageName} = require('${1:package}');$0",
    "description": "Require a package to const"
  },
  "exportDefaultFunction": {
    "prefix": "exfunc",
    "body": "export default function ${1:${TM_FILENAME_BASE}}(${2:params}) {\n\t$0\n};\n",
    "description": "Export default function in ES6 syntax"
  },
  "exportDefault": {
    "prefix": "exf",
    "body": "export default ${1:className}",
    "description": "Export default"
  }
}
